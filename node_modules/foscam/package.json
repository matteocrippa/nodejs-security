{
  "author": {
    "name": "Franklin van de Meent",
    "email": "fr@nkl.in",
    "url": "http://frankl.in"
  },
  "name": "foscam",
  "description": "Remote control, view and config a Foscam/Tenvis IP camera",
  "version": "0.2.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/fvdm/nodejs-foscam.git"
  },
  "main": "foscam.js",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "bugs": {
    "url": "https://github.com/fvdm/nodejs-foscam/issues"
  },
  "keywords": [
    "foscam",
    "tenvis",
    "camera",
    "ipcam",
    "webcam"
  ],
  "readme": "# nodejs-foscam\r\n\r\nRemote control, view and config a Foscam/Tenvis IP camera.\r\n\r\nAll included methods are based on Foscam's (fragmented) API documentation. Some features may not be supported by non-pan/tilt, older cameras or old firmware. So make sure you keep a backup of your camera settings, just in case.\r\n\r\n# Usage\r\n\r\nThe installation and loading are simple with [NPM](https://npmjs.org/).\r\n\r\n```sh\r\nnpm install foscam\r\n```\r\n\r\n```js\r\nvar cam = require('foscam')\r\n\r\ncam.setup({\r\n  host: 'mycamera.lan',\r\n  port: 81,\r\n  user: 'admin'\r\n  pass: ''\r\n})\r\n\r\n// start rotating left\r\ncam.control.decoder( 'left', function() {\r\n  \r\n  // stop rotation\r\n  cam.control.decoder( 'stop left', function() {\r\n    \r\n    // take a picture and store it on your computer\r\n    cam.snapshot( '/path/to/save.jpg', console.log )\r\n  \r\n  })\r\n  \r\n})\r\n```\r\n\r\n### Or directly from Github\r\n\r\n```sh\r\ngit clone https://github.com/fvdm/nodejs-foscam.git\r\n```\r\n```js\r\nvar cam = require('./nodejs-foscam')\r\n```\r\n\r\n# Methods\r\n\r\nEvery method takes a `callback` function as last parameter. The callbacks are the only way to procedural scripting.\r\n\r\n**NOTE:** Some methods require a certain access-level, i.e. *admins* can do everything, but a *visitor* can only view.\r\n\r\n## Basic\r\n\r\n## setup\r\n### ( properties, [callback] )\r\n\r\nIn order to connect to the camera you first need to provide its access details. You can either do this by setting the properties below directly in `cam.settings`, but better is to use `cam.setup()`. When the `callback` function is provided, `setup()` will attempt to connect to the camera and retrieve its status, returned as object to the callback. When it fails the callback gets **false**.\r\n\r\n<table>\r\n\t<th>setting</th>\r\n\t<th>description</th>\r\n\t<th>default</th>\r\n\t<tr>\r\n\t\t<td>host</td>\r\n\t\t<td>IP-address or hostname</td>\r\n\t\t<td>192.168.1.239</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>port</td>\r\n\t\t<td>port number</td>\r\n\t\t<td>81</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>user</td>\r\n\t\t<td>username</td>\r\n\t\t<td>admin</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>pass</td>\r\n\t\t<td>password</td>\r\n\t\t<td>[empty]</td>\r\n\t</tr>\r\n</table>\r\n\r\n```js\r\ncam.setup(\r\n\t{\r\n\t\thost: 'mycamera.lan',\r\n\t\tport: 81,\r\n\t\tuser: 'admin'\r\n\t\tpass: ''\r\n\t},\r\n\tfunction( status ) {\r\n\t\tif( !status ) {\r\n\t\t\tconsole.error( 'ERROR: can\\'t connect' )\r\n\t\t} else {\r\n\t\t\tconsole.log( status )\r\n\t\t}\r\n\t}\r\n)\r\n```\r\n\r\n## status\r\n### ( callback )\r\n**Permission: everyone**\r\n\r\nGet basic details from the camera.\r\n\r\n```js\r\ncam.status( console.log )\r\n```\r\n```js\r\n{ id: '001A11A00A0B',\r\n  sys_ver: '0.37.2.36',\r\n  app_ver: '3.2.2.18',\r\n  alias: 'Cam1',\r\n  now: '1343304558',\r\n  tz: '-3600',\r\n  alarm_status: '0',\r\n  ddns_status: '0',\r\n  ddns_host: '',\r\n  oray_type: '0',\r\n  upnp_status: '0',\r\n  p2p_status: '0',\r\n  p2p_local_port: '23505',\r\n  msn_status: '0',\r\n  alarm_status_str: 'no alarm',\r\n  ddns_status_str: 'No Action',\r\n  upnp_status_str: 'No Action' }\r\n```\r\n\r\n## camera_params\r\n### ( callback )\r\n\r\n**Permission: visitor**\r\n\r\nGet camera sensor settings.\r\n\r\n```js\r\ncam.camera_params( console.log )\r\n```\r\n```js\r\n{ resolution: 32,\r\n  brightness: 96,\r\n  contrast: 4,\r\n  mode: 1,\r\n  flip: 0,\r\n  fps: 0 }\r\n```\r\n\r\n## Camera\r\n\r\n## snapshot\r\n### ( [filename], callback )\r\n\r\nTake a snapshot. Either receive the **binary JPEG** in the `callback` or specify a `filename` to store it on your computer.\r\n\r\nWhen a `filename` is provided the callback will return either the *filename* on success or *false* on faillure.\r\n\r\n```js\r\n// custom processing\r\ncam.snapshot( function( jpeg ) {\r\n\t// add binary processing here\r\n})\r\n\r\n// store locally\r\ncam.snapshot( './my_view.jpg', console.log )\r\n```\r\n\r\n## preset.set\r\n### ( id, [cb] )\r\n\r\nSave current camera position in preset #`id`. You can set presets 1 to 16.\r\n\r\n```js\r\ncam.preset.set( 3, console.log )\r\n```\r\n\r\n## preset.go\r\n### ( id, [cb] )\r\n\r\nMove camera to the position as stored in preset #`id`. You can use presets 1 to 16.\r\n\r\n```js\r\ncam.preset.go( 3, console.log )\r\n```\r\n\r\n## control.decoder\r\n### ( command, [callback] )\r\n\r\nControl camera movement, like pan and tilt.\r\n\r\n**command** - The command to execute. This can be a string (see below) or number.\r\n\r\n###### Commands\r\n\r\n<table>\r\n\t<th>command</th>\r\n\t<th>api id</th>\r\n\t<th>description</th>\r\n\t<tr>\r\n\t\t<td>up</td>\r\n\t\t<td>0</td>\r\n\t\t<td>start moving upwards</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>stop up</td>\r\n\t\t<td>1</td>\r\n\t\t<td>stop moving upwards</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>down</td>\r\n\t\t<td>2</td>\r\n\t\t<td>start moving downwards</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>stop down</td>\r\n\t\t<td>3</td>\r\n\t\t<td>stop moving downwards</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>left</td>\r\n\t\t<td>4</td>\r\n\t\t<td>start moving left</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>stop left</td>\r\n\t\t<td>5</td>\r\n\t\t<td>stop moving left</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>right</td>\r\n\t\t<td>6</td>\r\n\t\t<td>start moving right</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>stop right</td>\r\n\t\t<td>7</td>\r\n\t\t<td>stop moving right</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>center</td>\r\n\t\t<td>25</td>\r\n\t\t<td>move to center</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>vertical patrol</td>\r\n\t\t<td>26</td>\r\n\t\t<td>start moving vertical (y-axis)</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>stop vertical patrol</td>\r\n\t\t<td>27</td>\r\n\t\t<td>stop moving vertical (y-axis)</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>horizontal patrol</td>\r\n\t\t<td>28</td>\r\n\t\t<td>start moving horizontal (x-axis)</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>stop horizontal patrol</td>\r\n\t\t<td>29</td>\r\n\t\t<td>stop moving horizontal (x-axis)</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>io output high</td>\r\n\t\t<td>94</td>\r\n\t\t<td>iR on *(some cameras)*</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>io output low</td>\r\n\t\t<td>95</td>\r\n\t\t<td>iR off *(some cameras)*</td>\r\n\t</tr>\r\n</table>\r\n\r\n## control.camera\r\n### ( name, value, [callback] )\r\n\r\nChange a camera (sensor) setting.\r\n\r\n**name** - the parameter *name* or *id*.\r\n**value** - its replacement value.\r\n\r\n###### Parameters\r\n\r\n<table>\r\n\t<th>name</th>\r\n\t<th>id</th>\r\n\t<th>values</th>\r\n\t<tr>\r\n\t\t<td>brightness</td>\r\n\t\t<td>1</td>\r\n\t\t<td>0-255</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>contrast</td>\r\n\t\t<td>2</td>\r\n\t\t<td>0-6</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>resolution</td>\r\n\t\t<td>0</td>\r\n\t\t<td>\r\n\t\t\t<table>\r\n\t\t\t\t<th>value (aliases)</th>\r\n\t\t\t\t<th>id</th>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>320, 320x240, 320*240</td>\r\n\t\t\t\t\t<td>8</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>640, 640x480, 640*480</td>\r\n\t\t\t\t\t<td>32</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>mode</td>\r\n\t\t<td>3</td>\r\n\t\t<td>\r\n\t\t\t<table>\r\n\t\t\t\t<th>value (aliases)</th>\r\n\t\t\t\t<th>id</th>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>50, 50hz, 50 hz</td>\r\n\t\t\t\t\t<td>0</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>60, 60hz, 60 hz</td>\r\n\t\t\t\t\t<td>1</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>outdoor, outside</td>\r\n\t\t\t\t\t<td>2</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>flipmirror</td>\r\n\t\t<td>5</td>\r\n\t\t<td>\r\n\t\t\t<table>\r\n\t\t\t\t<th>value (aliases)</th>\r\n\t\t\t\t<th>id</th>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>default</td>\r\n\t\t\t\t\t<td>0</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>flip</td>\r\n\t\t\t\t\t<td>1</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>mirror</td>\r\n\t\t\t\t\t<td>2</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>flipmirror, flip+mirror</td>\r\n\t\t\t\t\t<td>3</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</td>\r\n\t</tr>\r\n</table>\r\n\r\n## System\r\n\r\n## reboot\r\n### ( [callback ] )\r\n\r\nReboot the device\r\n\r\n## restore_factory\r\n### ( [callback ] )\r\n\r\nReset all settings back to their factory values.\r\n\r\n## talk\r\n### ( propsObject )\r\n\r\nDirectly communicate with the device.\r\n\r\n###### properties\r\n\r\n<table>\r\n\t<th>name</th>\r\n\t<th>required</th>\r\n\t<th>description</th>\r\n\t<th>value</th>\r\n\t<th>default</th>\r\n\t<tr>\r\n\t\t<td>path</td>\r\n\t\t<td>required</td>\r\n\t\t<td>the method path</td>\r\n\t\t<td>ie. `get_params.cgi`</td>\r\n\t\t<td></td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>fields</td>\r\n\t\t<td>optional</td>\r\n\t\t<td>object with method parameters</td>\r\n\t\t<td>ie. {ntp_enable: 1, ntp_svr: 'ntp.xs4all.nl'}\r\n\t\t<td>{}</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>encoding</td>\r\n\t\t<td>optional</td>\r\n\t\t<td>response encoding to expect</td>\r\n\t\t<td>ie. `utf8` or `binary`</td>\r\n\t\t<td></td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>callback</td>\r\n\t\t<td>optional</td>\r\n\t\t<td>(trimmed) output will be send to the callback *function*</td>\r\n\t\t<td></td>\r\n\t\t<td></td>\r\n\t</tr>\r\n</table>\r\n\r\n# Unlicense\r\n\r\nThis is free and unencumbered software released into the public domain.\r\n\r\nAnyone is free to copy, modify, publish, use, compile, sell, or\r\ndistribute this software, either in source code form or as a compiled\r\nbinary, for any purpose, commercial or non-commercial, and by any\r\nmeans.\r\n\r\nIn jurisdictions that recognize copyright laws, the author or authors\r\nof this software dedicate any and all copyright interest in the\r\nsoftware to the public domain. We make this dedication for the benefit\r\nof the public at large and to the detriment of our heirs and\r\nsuccessors. We intend this dedication to be an overt act of\r\nrelinquishment in perpetuity of all present and future rights to this\r\nsoftware under copyright law.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\r\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\r\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\nOTHER DEALINGS IN THE SOFTWARE.\r\n\r\nFor more information, please refer to <http://unlicense.org/>\r\n",
  "readmeFilename": "README.md",
  "_id": "foscam@0.2.2",
  "dist": {
    "shasum": "737facd16c255c14dd8513584bed8b911043bce3"
  },
  "_from": "foscam@*",
  "_resolved": "https://registry.npmjs.org/foscam/-/foscam-0.2.2.tgz"
}
